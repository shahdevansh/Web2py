nexttext{{extend 'layout.html'}}
<h1>This is the default/fb_login.html template</h1>
{{=BEAUTIFY(response._vars)}}
<button><a href="../contact_list">See your friends</a> </button><br />


<form id="myform" method="post" action="get_email">
    <input id="Token" name="Token" type="hidden" />
    <input type="Submit" value="Save my Friends">
</form>


<script>
  window.fbAsyncInit = function() {
  FB.init({
    appId      : '709150365766332', // App ID
    channelUrl : 'https://divvy11.pythonanywhere.com/sharing/default/new.html', // Channel File

    status     : true, // check login status
    cookie     : true, // enable cookies to allow the server to access the session
    xfbml      : true  // parse XFBML
  });

  // Here we subscribe to the auth.authResponseChange JavaScript event. This event is fired
  // for any authentication related change, such as login, logout or session refresh. This means that
  // whenever someone who was previously logged out tries to log in again, the correct case below
  // will be handled.
  FB.Event.subscribe('auth.authResponseChange', function(response) {
    // Here we specify what we do with the response anytime this event occurs.
    if (response.status === 'connected') {
        //    alert("Logged in successfully");

     	var uid = response.authResponse.userID;
        var accessToken = response.authResponse.accessToken;
        var form_access_token=document.getElementById("Token");
        form_access_token.value=accessToken;

        //    document.getElementById("Token").value = accessToken;
        document.getElementById("Token1").innerHTML= accessToken;
        //   document.getElementById("myform").submit();
        //   document.getElementById("myResults").innerHTML = name
        //    else {
        //    console.log('User cancelled login or did not fully authorize.');
        //  }


       //  window.location.href="http://google.com";
      // The response object is reture.comlned with a status field that lets the app know the current
      // login status of the person. In this case, we're handling the situation where they
      // have logged in to the app.
      testAPI();
    } else if (response.status === 'not_authorized') {
      document.write("<h1>This is a heading</h1>");
      // In this case, the person is logged into Facebook, but not into the app, so we call
      // FB.login() to prompt them to do so.
      // In real-life usage, you wouldn't want to immediately prompt someone to login
      // like this, for two reasons:
      // (1) JavaScript created popup windows are blocked by most browsers unless they
      // result from direct interaction from people using the app (such as a mouse click)
      // (2) it is a bad experience to be continually prompted to login upon page load.
      FB.login();
    } else {
      alert("In else part");
      // In this case, the person is not logged into Facebook, so we call the login()
      // function to prompt them to do so. Note that at this stage there is no indication
      // of whether they are logged into the app. If they aren't then they'll see the Login
      // dialog right after they log in to Facebook.
      // The same caveats as above apply to the FB.login() call here.
      FB.login();
    }
  });
  };

  // Load the SDK asynchronously
  (function(d){
   var js, id = 'facebook-jssdk', ref = d.getElementsByTagName('script')[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement('script'); js.id = id; js.async = true;
   js.src = "//connect.facebook.net/en_US/all.js";
   ref.parentNode.insertBefore(js, ref);
  }(document));

  // Here we run a very simple test of the Graph API after login is successful.
  // This testAPI() function is only called in those cases.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Good to see you, ' + response.name + '.');
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses the JavaScript SDK to
  present a graphical Login button that triggers the FB.login() function when clicked.

  Learn more about options for the login button plugin:
  /docs/reference/plugins/login/-->





 <script src="//connect.facebook.net/en_US/all.js"></script>

<html>
<head></head>
<body>
<div id="fb-root"></div>
 <fb:login-button show-faces="true" width="200" max-rows="1"></fb:login-button>

<!--

<script>
 FB.login(function(response) {
   if (response.authResponse) {
     console.log('Welcome!  Fetching your information.... ');
     FB.api('/me', function(response) {
       console.log('Good to see you, ' + response.name + '.');
     });
   } else {
     console.log('User cancelled login or did not fully authorize.');
   }
 });
    </script>
-->

    <br />


    <!-- token is printed here-->
    <!--Token=<div id="Token1"></div>-->



<script type="text/javascript">
    // in some function...
    //    document.getElementById("myform").submit();
</script>
